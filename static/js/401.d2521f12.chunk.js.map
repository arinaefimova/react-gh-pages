{"version":3,"file":"static/js/401.d2521f12.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from './error.gif'\r\nconst ErrorMessage=()=>{\r\n    return(\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"\"/>\r\n       <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"error\"/>\r\n    )\r\n}\r\nexport default ErrorMessage","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './comicsList.scss';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage.js';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false)\n\n    const { loading, error, getAllComics } = useMarvelService();\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n\n    }\n    const onComicsListLoaded = (newComicsList) => {\n        // setComicsList()\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false)\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended)\n    }\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n\n            </ul>\n        )\n    }\n    const items = renderItems(comicsList)\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button onClick={()=>onRequest(offset)} disabled={newItemLoading} style={{'display' : comicsEnded ? 'none' : 'block'}} className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                 <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\nexport default ComicsPage","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const reqest = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(url, { method, body, headers })\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status ${response.status}`)\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data\r\n        }\r\n        catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n    return { loading, reqest, error, clearError }\r\n}","import { useHttp } from \"../hooks/http.hook.js\";\r\nconst useMarvelService = () => {\r\n    const { loading, reqest, error, clearError } = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=0065c0a1a339412b87b251245bac71f2';\r\n    const _baseOffset = 210;\r\n\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await reqest(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n    const getCharacter = async (id) => {\r\n        const res = await reqest(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await reqest(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n    const getComics = async (id) => {\r\n        const res = await reqest(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0])\r\n    }\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await reqest(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id, id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            pageCount: comics.pageCount\r\n                ? `${comics.pageCount} p.`\r\n                : \"No information about the number of pages\",\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            // optional chaining operator\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : \"not available\",\r\n\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        let charDescr = char.description;\r\n        if (charDescr === '') {\r\n            charDescr = 'Decription is missing.'\r\n        }\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: charDescr,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n\r\n    }\r\n    return { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComics, getCharacterByName }\r\n}\r\n\r\nexport default useMarvelService"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","useState","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","errorMessage","spinner","Spinner","onClick","disabled","ComicsPage","_Fragment","Helmet","name","content","reqest","clearError","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformComics","comics","_comics$textObjects$","description","pageCount","path","extension","language","textObjects","prices","_transformCharacter","char","charDescr","homepage","urls","wiki","getAllCharacters","results","getCharacter","res","getComics","getCharacterByName"],"sourceRoot":""}